version: '3.8'

# Production docker-compose for local testing of production setup
# DO NOT USE THIS ON SERVER - Use Render.com dashboard instead

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.production
    container_name: gym_backend_prod
    restart: always
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_PROFILES_ACTIVE: production
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - gym-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.production
    container_name: gym_frontend_prod
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - gym-network

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx.production
    container_name: nginx_prod
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    networks:
      - gym-network

  db:
    image: mysql:8.0
    container_name: mysql_db_prod
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      MYSQL_DATABASE: gym
      MYSQL_USER: ${SPRING_DATASOURCE_USERNAME}
      MYSQL_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_prod_data:/var/lib/mysql
    networks:
      - gym-network

volumes:
  mysql_prod_data:

networks:
  gym-network:
    driver: bridge
